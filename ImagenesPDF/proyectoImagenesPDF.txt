Proyecto ‚ÄúImagenesPDF‚Äù ‚Äì Propuesta T√©cnica (actualizada multi-cat√°logo)
A. Arquitectura (vista r√°pida)
‚Ä¢ Core (vendor-agnostic): tablas normalizadas para pieza, variantes, veh√≠culos, a√±os expandidos, OEM, empaque, certificaciones, medios (im√°genes/video), compatibilidades, hist√≥rico e incidencias.
‚Ä¢ Adaptadores por proveedor: m√≥dulos que leen PDF y mapean sus campos ‚Üí core.
o adapters/depo, adapters/yuto, adapters/hushan, adapters/<futuros>.
‚Ä¢ Cat√°logo de mapeos/config (YAML/JSON): diccionarios de colores ‚Üí homologaci√≥n, alias de ‚Äúfeatures‚Äù (p.ej., with_keyhole, smart_key_sensor), taxonom√≠a de tipos de partes.
‚Ä¢ Entrega: Excel maestro (hojas relacionadas + ‚ÄúFicha de oferta‚Äù), CSV espejo, im√°genes en jerarqu√≠a y en carpeta plana, logs y reportes.
‚Ä¢ Ejecuci√≥n: app Windows .exe (PyInstaller) + run.bat (sin l√≠mites artificiales).
B. Reglas clave ya integradas
‚Ä¢ A√±os abreviados (‚Äô00‚Äì‚Äô29 ‚Üí 2000‚Äì2029; ‚Äô30‚Äì‚Äô99 ‚Üí 1930‚Äì1999) y a√±os expandidos por item: [2003‚Äì2008] ‚Üí 2003,2004,2005,2006,2007,2008.
‚Ä¢ Compatibilidades con tabla propia (y tambi√©n a√±os expandidos de compatibilidad).
‚Ä¢ Hist√≥rico de cambios (B) + multimedia (im√°genes hoy; listo para video/audio).
‚Ä¢ Homologaci√≥n por color del texto del c√≥digo (rosado=homologado, azul=no homologado).
‚Ä¢ LD/RD (volante), side (L/R), bulbs normalizados, packs (PCS/CFT/N.W./G.W.), market/availability (incluye TBA / Non-US si aplica).
‚Ä¢ Doble guardado de im√°genes: ruta jer√°rquica y copia ‚Äú\_flat‚Äù.
C. Esquema relacional (‚â• 3FN) ‚Äî resumen final
Dimensiones
‚Ä¢ dim_supplier(supplier_id, name)
‚Ä¢ dim_country(country_code, name)
‚Ä¢ dim_maker(maker_code, name)
‚Ä¢ dim_product_type(product_type_code, name, parent_code NULL) (jerarqu√≠a: LIGHTING > HEAD_LAMP / TAIL_LAMP; BODY > DOOR_HANDLE ‚Ä¶)
‚Ä¢ dim_side(side_code[L/R/N], name)
‚Ä¢ dim_drive(drive_code[LD/RD], name)
‚Ä¢ dim_classification(class_code[U/A/W/B/-], desc)
‚Ä¢ dim_certification(cert_code[S/E/Q/C/D/(blank)], desc)
‚Ä¢ dim_base_color(base_code[1..9], desc)
‚Ä¢ dim_socket_feature(socket_code[Z/O/T/D/N/B/S/-], desc)
‚Ä¢ dim_lens_i(lens_i[C/R/Y/S/B/G/A/L], desc)
‚Ä¢ dim_lens_j(lens_j[C/R/Y/S/B/G/A/O/D/2/3/6], desc)
‚Ä¢ dim_bulb(bulb_code, name)
‚Ä¢ dim_feature(feature_code, name, category) (LED, puddle_lamp, heated, with_keyhole, smart_key_sensor, ‚Ä¶)
‚Ä¢ dim_highlight_status(pdf_text_color, homologation_status[homologado/no_homologado/non_us/tba], supplier_id NULL) (permite reglas por proveedor)
Cat√°logos / √≠ndice
‚Ä¢ catalogs(catalog_id, supplier_id‚Üídim_supplier, title, edition, notes)
‚Ä¢ pdfs(pdf_id, catalog_id‚Üícatalogs, file_name, path, sha256 UNIQUE, created_at, modified_at, processed_at)
‚Ä¢ vehicle_index(vehicle_id, maker_code‚Üídim_maker, model_name, variant_name NULL, body_style NULL, year_from, year_to, page)
‚Ä¢ vehicle_years(vehicle_id‚Üívehicle_index, year, PK(vehicle_id,year))
√çtems y relaciones
‚Ä¢ items(item_id, supplier_id‚Üídim_supplier, supplier_sku NULL, -- p.ej., YUTO/HUSHAN near_oem NULL, -- p.ej., 212-11U4-EM2 (DEPO) variant_code NULL, side_code‚Üídim_side, drive_code‚Üídim_drive, maker_code‚Üídim_maker, product_type_code‚Üídim_product_type, country_code‚Üídim_country, class_code‚Üídim_classification, cert_code‚Üídim_certification, base_code NULL‚Üídim_base_color, socket_code NULL‚Üídim_socket_feature, lens_i NULL‚Üídim_lens_i, lens_j NULL‚Üídim_lens_j, with_motor_flag BOOL, elec_flag BOOL, bulbs_raw TEXT, pcs_default INT, cft_default NUMERIC(10,2), nw_kg NUMERIC(10,2) NULL, gw_kg NUMERIC(10,2) NULL, market_region NULL, availability NULL, homologation_color NULL‚Üídim_highlight_status.pdf_text_color, -- rosa/azul etc. vehicle_id NULL‚Üívehicle_index, page INT, pdf_id‚Üípdfs, notes TEXT, status TEXT DEFAULT 'ok', UNIQUE(supplier_id, COALESCE(near_oem,'#'), COALESCE(supplier_sku,'#'), variant_code, side_code, drive_code, pdf_id) )
‚Ä¢ item_years(item_id‚Üíitems, year, PK(item_id,year)) (copiado de vehicle_years)
‚Ä¢ item_oem(item_id‚Üíitems, oem_code, side_code‚Üídim_side NULL, role[main/related], PK(item_id,oem_code,COALESCE(side_code,'-')))
‚Ä¢ item_pack(item_id‚Üíitems, pack_variant[DEFAULT/A/U/‚Ä¶], pcs INT, cft NUMERIC, nw_kg NUMERIC NULL, gw_kg NUMERIC NULL, PK(item_id,pack_variant))
‚Ä¢ item_bulb(item_id‚Üíitems, bulb_code‚Üídim_bulb, present_flag SMALLINT, PK(item_id,bulb_code))
‚Ä¢ item_feature(item_id‚Üíitems, feature_code‚Üídim_feature, value_bool BOOL DEFAULT TRUE, value_text TEXT NULL, PK(item_id,feature_code))
‚Ä¢ item_compat(item_id‚Üíitems, maker_code, model_name, year_from, year_to, source_oem, PK(item_id,maker_code,model_name,year_from,year_to,source_oem))
‚Ä¢ item_compat_years(item_id‚Üíitems, maker_code, model_name, year, source_oem, PK(item_id,maker_code,model_name,year,source_oem))
Multimedia e hist√≥rico
‚Ä¢ media_files(media_id, media_type['image','video','audio','doc'], file_path, flat_copy_path, sha256, width_px INT NULL, height_px INT NULL, dpi INT NULL, duration_ms INT NULL, created_at)
‚Ä¢ item_media(item_id‚Üíitems, media_id‚Üímedia_files, role['primary','secondary','manual','installation','packaging','oem-proof'], PK(item_id,media_id))
‚Ä¢ issues(issue_id, item_id‚Üíitems, field, value, problem, page, suggestion, created_at)
‚Ä¢ history(hist_id, item_id‚Üíitems, field, old_value, new_value, pdf_id‚Üípdfs, changed_at) (incluye cambios en medios y empaques)
Nota: mantenemos 3FN para todo lo com√∫n; la tabla item_feature permite sumar atributos espec√≠ficos por proveedor sin romper la normalizaci√≥n del n√∫cleo.
D. Pipeline de extracci√≥n (ETL)

1. Ingesta (metadatos + hash).
2. √çndice de veh√≠culos ‚Üí vehicle_index + expansi√≥n vehicle_years.
3. Detecci√≥n de bloques por p√°gina y parsing (adaptador proveedor):
   o DEPO: c√≥digos A-J + addenda, OEM por lado, bulbs, ELEC/MOTOR, PCS/CFT, color del texto (rosa/azul).
   o YUTO: R/L, RHD/LHD, features (LED/puddle/heat), PCS/CFT/NW/GW, ‚ÄúUSA type‚Ä¶‚Äù.
   o HUSHAN: acabados, keyhole/sensor, subpiezas, PCS/CFT/NW/GW.
4. Clasificaci√≥n de color del texto (span fill ‚Üí HSL; raster fallback).
5. Recorte de im√°genes del bloque (una por variante) ‚Üí PNG 1200 DPI (jer√°rquico + ‚Äú\_flat‚Äù).
6. Normalizaci√≥n hacia dim*\* y poblar relaciones (item*\*).
7. Expansi√≥n de a√±os por √≠tem (item_years).
8. Validaciones + issues.
9. Writer: Excel maestro + CSV espejo + reporte.
10. Versionado: diffs a history.
    E. Interfaz de nuevos adaptadores (para ‚Äúotros cat√°logos‚Äù)
    ‚Ä¢ map_product_type() ‚Üí dim_product_type.
    ‚Ä¢ parse_block() ‚Üí devuelve un dict est√°ndar (near_oem/supplier_sku, side/drive, features, packs, bulbs, oems, market/availability, media_bbox).
    ‚Ä¢ map_features() ‚Üí dim_feature + item_feature.
    ‚Ä¢ color_policy() ‚Üí mapea colores del texto a dim_highlight_status (por supplier).
    ‚Ä¢ vehicle_link() ‚Üí resuelve vehicle_id y a√±os.
    F. Entregables
    ‚Ä¢ Excel maestro con todas las hojas (normalizadas + vistas de oferta) y validaciones.
    ‚Ä¢ CSV espejo por hoja.
    ‚Ä¢ Im√°genes (dos estructuras).
    ‚Ä¢ Logs/Reporte (resumen, errores, m√©tricas).
    G. Operaci√≥n
    ‚Ä¢ CLI sin l√≠mites: selecci√≥n por proveedor/marca, rango de p√°ginas, modo OCR auto/manual, reproceso selectivo.
    ‚Ä¢ Ejecuci√≥n en modo admin (como pediste), ideal para corridas puntuales de actualizaci√≥n de kardex.

---

Cierre
‚Ä¢ DEPO nos dio el esqueleto: gracias a la capa de adaptadores y las tablas item_feature/item_attribute (normalizadas), cualquier cat√°logo de autopartes que liste c√≥digos/compatibilidades/paquetes/medidas entra en la misma base.
‚Ä¢ Los tres modelos (DEPO, YUTO, HUSHAN) quedan confirmados y compatibles.
‚Ä¢ La propuesta anterior queda actualizada para contemplar otros cat√°logos futuros sin re-dise√±ar la base.
¬øQuieres que te deje tambi√©n un script de carga a PostgreSQL (DDL + √≠ndices + llaves for√°neas) y una plantilla Excel ya con todas estas hojas vinculadas (la ‚Äúmaster.xlsx‚Äù definitiva) para que el equipo empiece a poblar de inmediato?

üìÇ PROYECTO: SISTEMA DE GESTI√ìN MULTIMEDIA PARA E-COMMERCE
Versi√≥n: 1.5
Fecha: Agosto 2024
Objetivo: Implementar un sistema robusto para manejar im√°genes, videos, documentos 3D y rese√±as con multimedia en un e-commerce, garantizando alta performance, seguridad y escalabilidad.

---

üìù DOCUMENTO DE REQUERIMIENTOS
üîπ 1. Alcance
Desarrollar un m√≥dulo que permita:
‚Ä¢ Subir, almacenar y asociar multimedia a productos.
‚Ä¢ Gestionar rese√±as con fotos/videos de clientes, incluyendo validaci√≥n y retroalimentaci√≥n.
‚Ä¢ Optimizar el rendimiento en despliegue (CDN, lazy loading, formatos modernos).
‚Ä¢ Integrar anal√≠ticas de uso y engagement.

---

üîπ 2. Requerimientos T√©cnicos
üìå Backend
ID Requerimiento Prioridad
BE-01 API REST para subida de archivos (im√°genes, videos, PDFs, 3D) con validaci√≥n de formato/tama√±o. Alta
BE-02 Procesamiento autom√°tico: compresi√≥n de im√°genes (WebP), thumbnails, extracci√≥n de metadatos (FFmpeg). Alta
BE-03 Almacenamiento en AWS S3 + CloudFront (o Cloudinary) con URLs HTTPS. Alta
BE-04 Base de datos PostgreSQL con tablas Multimedia, Producto_Multimedia, Rese√±as_Cliente. Alta
BE-05 Sistema de moderaci√≥n para marcar multimedia en rese√±as como "validada". Media
BE-06 Endpoints para interacciones ("me gusta", "reportar") en rese√±as. Media
üìå Frontend
ID Requerimiento Prioridad
FE-01 Componente <MediaGallery> con zoom, vista 360¬∞ (Three.js) y navegaci√≥n por thumbnails. Alta
FE-02 Reproductor de videos adaptable (HTML5 para self-hosted, embed para YouTube/Vimeo). Alta
FE-03 Visualizador de PDFs en modal (PDF.js). Media
FE-04 Botones de interacci√≥n en rese√±as ("√ötil", "Reportar", "Compartir"). Alta
FE-05 Badge "Multimedia verificada" para contenido moderado. Media
üìå DevOps
ID Requerimiento Prioridad
DEV-01 Configuraci√≥n de CDN (CloudFront) con cache TTL de 24h. Alta
DEV-02 Cronjob para limpieza de archivos no asociados a productos (cada 30 d√≠as). Media
DEV-03 Monitoreo de ancho de banda y almacenamiento (AWS CloudWatch). Media

---

üîπ 3. Esquema de Base de Datos
üìä Tabla Multimedia
sql
CREATE TABLE Multimedia (
id BIGSERIAL PRIMARY KEY,
tipo*recurso VARCHAR(20) NOT NULL, -- 'imagen', 'video', 'pdf', '3d'
subtipo VARCHAR(20) NOT NULL, -- 'webp', 'mp4', 'youtube', 'glb'
url_principal VARCHAR(512) NOT NULL,
derivados JSONB, -- { "miniaturas": {"small": "url"}, "watermark": "url" }
metadatos JSONB NOT NULL, -- { "alt_text": "descripci√≥n", "duracion": 30 }
estado VARCHAR(15) DEFAULT 'activo', -- 'activo', 'pendiente', 'eliminado'
visibilidad VARCHAR(15) DEFAULT 'publico', -- 'publico', 'privado'
fecha_subida TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
owner_id BIGINT -- FK a Usuarios
);
üìä Tabla Producto_Multimedia
sql
CREATE TABLE Producto_Multimedia (
producto_id BIGINT NOT NULL, -- FK a Productos
multimedia_id BIGINT NOT NULL, -- FK a Multimedia
orden_visual INT NOT NULL,
rol_uso VARCHAR(20), -- 'portada', 'galeria', 'especificaciones'
PRIMARY KEY (producto_id, multimedia_id)
);
üìä Tabla Rese√±as_Cliente
sql
CREATE TABLE Rese√±as_Cliente (
id BIGSERIAL PRIMARY KEY,
producto_id BIGINT NOT NULL, -- FK a Productos
usuario_id BIGINT NOT NULL, -- FK a Usuarios
rating SMALLINT CHECK (rating BETWEEN 1 AND 5),
comentario TEXT,
multimedia_id BIGINT, -- FK a Multimedia (NULLABLE)
multimedia_valida BOOLEAN DEFAULT FALSE,
likes_multimedia INT DEFAULT 0,
reportes_multimedia INT DEFAULT 0,
es*√∫til INT DEFAULT 0,
fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

---

üîπ 4. Plan de Implementaci√≥n
Fase 1: Core Multimedia (2 semanas)
‚Ä¢ BE-01, BE-02, BE-04 (API de subida + BD).
‚Ä¢ FE-01, FE-02 (Galer√≠a + reproductor de video).
‚Ä¢ DEV-01 (Configuraci√≥n de CDN).
Fase 2: Rese√±as y Moderaci√≥n (1 semana)
‚Ä¢ BE-05, BE-06 (Validaci√≥n de rese√±as + interacciones).
‚Ä¢ FE-04, FE-05 (Botones de interacci√≥n + badges).
Fase 3: Optimizaci√≥n y Anal√≠tica (1 semana)
‚Ä¢ DEV-02, DEV-03 (Limpieza + monitoreo).
‚Ä¢ Dashboard de m√©tricas (vistas_multimedia, rese√±as m√°s √∫tiles).

---

üîπ 5. Stack Tecnol√≥gico
√Årea Tecnolog√≠a
Backend Node.js (Express) / Python (Django) + PostgreSQL.
Frontend React + Three.js (3D) + Swiper.js (galer√≠as).
Almacenamiento AWS S3 + CloudFront (CDN).
Procesamiento Sharp (im√°genes), FFmpeg (videos), PDF.js (documentos).
Anal√≠tica Metabase o Google Data Studio (para dashboards).

---

üîπ 6. Entregables
‚úÖ C√≥digo Fuente: Repositorio Git con backend + frontend.
‚úÖ Documentaci√≥n: API (Swagger), esquema de BD, manual de despliegue.
‚úÖ Dashboard de M√©tricas: Rese√±as m√°s √∫tiles, multimedia m√°s vista.
‚úÖ Pruebas de Carga: Reporte de performance con 10k solicitudes simult√°neas.

---

üîπ 7. M√©tricas de √âxito
‚Ä¢ Tiempo de carga multimedia: <1s en dispositivos m√≥viles (4G).
‚Ä¢ Conversi√≥n: Aumento del 15% en ventas de productos con rese√±as validadas.
‚Ä¢ Retenci√≥n: 80% de usuarios interact√∫a con multimedia (zoom, videos).
