schema_version: "1.1.0"
generated_at: "2025-08-14T00:00:00Z"
source_note: "Features alineado con dims.yaml v1.3.0. Manejo robusto de años, OEM y near-OEM (extracción, normalización, vinculación, validación, plantillas)."

dependencies:
  dims_version_expected: ">=1.3.0"
  refs:
    sides: "dims.dimensions.sides"
    drives: "dims.dimensions.drives"
    bulbs: "dims.dimensions.bulbs"
    certs: "dims.numbering.G_product_certification.map"
    base_code: "dims.numbering.H_base_code.map"
    lens_i: "dims.numbering.I_lens_variation.map"
    lens_j: "dims.numbering.J_additional_lens_color.map"
    product_group: "dims.numbering.C_product_type.map"
    makers_canonical: "dims.dimensions.vehicle_makers"
    models: "dims.vehicle_models"

# ==========================================================
# 0) EXTRACCIÓN Y NORMALIZACIÓN ESPECIALIZADA
# ==========================================================
extraction:
  model_header:
    # Busca encabezados tipo: "REPLACEMENT FOR CAMRY 01~03" o "FOR TOYOTA COROLLA 1998–2000"
    patterns:
      - '(?i)REPLACEMENT\\s+FOR\\s+(?P<model>[A-Z0-9\\-\\./\\s]+?)\\s+(?P<years>\\d{2}\\s*[~\\-–]\\s*\\d{2})'
      - '(?i)FOR\\s+(?P<model>[A-Z0-9\\-\\./\\s]+?)\\s+(?P<years>\\d{4}\\s*[~\\-–]\\s*\\d{4})'
      - '(?i)REPLACEMENT\\s+FOR\\s+(?P<model>[A-Z0-9\\-\\./\\s]+?)' # sin años (opcional)
  year_parsing:
    # Convierte rangos "95~97" → 1995–1997; "01~03" → 2001–2003
    # Regla de pivote: 00..30 => 2000..2030 ; 31..99 => 1931..1999 (ajústalo si lo necesitas)
    pivot_two_digit: 30
    normalize:
      collapse_spaces: true
      dash_chars: ["-", "–", "—", "~"]
    validation:
      min_year: 1980
      max_year: 2035
  oem_codes:
    normalization:
      uppercase: true
      strip_spaces: true
      unify_separator: "-" # convierte espacios o otros separadores a '-'
      allowed_chars: "A-Z0-9-" # filtra lo que no cumpla
      trim_leading_zeros_in_blocks: false
    # Si hay múltiples OEM en un bloque, el primero será propuesto como primario (puedes cambiar esta heurística)
    primary_selection: "first"
  near_oem_codes:
    normalization:
      uppercase: true
      strip_spaces: true
      unify_separator: "-"
      allowed_chars: "A-Z0-9-/"
    linkage:
      # Cómo intentamos vincular near-OEM → OEM:
      strategies:
        - "exact_match" # near == uno de los OEM normalizados
        - "prefix_match" # 'XXXXX-123' = 'XXXXX123' o variantes con/ sin '-'
        - "token_overlap" # comparten bloques relevantes (>=2 tokens)
      prefer_oem_from_same_item: true
      confidence_labels: ["exact", "high", "medium", "low"]

# ==========================================================
# 1) DERIVACIÓN DIRECTA DESDE CÓDIGO (A–J → features)
# ==========================================================
derived_from_code:
  mapping:
    E_position.side:
      from: "E"
      enum_ref: "dims.dimensions.sides"
      description: "Lado de instalación o presentación del set."
    F_classification.kind:
      from: "F"
      enum_ref: "dims.numbering.F_classification.map"
      description: "Unit/Assembly/Only socket/Only bulb/…"
    G_certification.primary:
      from: "G"
      enum_ref: "dims.numbering.G_product_certification.map"
      allow_blank: true
      description: "S/E/Q/C/D o blanco."
    H_base_code.base:
      from: "H"
      enum_ref: "dims.numbering.H_base_code.map"
      description: "Base (color/estilo/socket)."
    I_lens.variant_i:
      from: "I"
      enum_ref: "dims.numbering.I_lens_variation.map"
    J_lens.variant_j:
      from: "J"
      enum_ref: "dims.numbering.J_additional_lens_color.map"

  addendum_headlamps_only:
    F_overrides:
      from: "F"
      enum_ref: "dims.addendum_headlamps_only.F_assembly_spec.map"
      applies_when: 'C == "11"'
    G_overrides:
      from: "G"
      enum_ref: "dims.addendum_headlamps_only.G_classification.map"
      applies_when: 'C == "11"'
    H_overrides:
      from: "H"
      enum_ref: "dims.addendum_headlamps_only.H_product_certification.map"
      applies_when: 'C == "11"'
    IJK_submodel:
      from: "variant_tail"
      enum_ref: "dims.addendum_headlamps_only.IJK_submodel_variation.map"
      multi: true
      applies_when: 'C == "11"'

# ==========================================================
# 2) CAMPOS COMUNES (incluye años, OEM y near-OEM robusto)
# ==========================================================
common:
  identity:
    product_group_code:
      type: "string"
      enum_ref: "dims.numbering.C_product_type.map"
      required: true
    maker_canonical:
      type: "string"
      enum_ref: "dims.dimensions.vehicle_makers"
    model_canonical:
      type: "string"
      enum_ref: "dims.vehicle_models[<maker>]"
    model_years:
      type: "object"
      properties:
        from: { type: "integer", minimum: 1950, maximum: 2100 }
        to: { type: "integer", nullable: true, maximum: 2100 }
      description: "Rango de años normalizado desde encabezado o celda."

  fitment:
    side: { type: "string", enum_ref: "dims.dimensions.sides" }
    drive: { type: "string", enum_ref: "dims.dimensions.drives" }
    body_style:
      type: "string"
      enum:
        [
          "SEDAN",
          "HATCHBACK",
          "WAGON",
          "SUV",
          "PICKUP",
          "VAN",
          "COUPE",
          "CONVERTIBLE",
          "MPV",
          "OTHER",
        ]
    doors:
      type: "integer"
      minimum: 2
      maximum: 6

  optics_electrical:
    voltage: { type: "integer", enum: [12, 24] }
    connector_pins: { type: "integer", minimum: 2, maximum: 12 }
    socket_features:
      type: "array"
      items: { enum_ref: "dims.dimensions.socket_features" }
    bulbs:
      type: "object"
      properties:
        low_beam: { type: "string", enum_ref: "dims.dimensions.bulbs" }
        high_beam: { type: "string", enum_ref: "dims.dimensions.bulbs" }
        drl: { type: "string", enum_ref: "dims.dimensions.bulbs" }
        turn_signal: { type: "string", enum_ref: "dims.dimensions.bulbs" }
        parking: { type: "string", enum_ref: "dims.dimensions.bulbs" }
        stop: { type: "string", enum_ref: "dims.dimensions.bulbs" }
        tail: { type: "string", enum_ref: "dims.dimensions.bulbs" }
        reverse: { type: "string", enum_ref: "dims.dimensions.bulbs" }
        rear_fog: { type: "string", enum_ref: "dims.dimensions.bulbs" }

  compliance:
    certification:
      type: "string"
      enum_ref: "dims.numbering.G_product_certification.map"
      allow_blank: true
    capa_grade:
      type: "string"
      enum: ["CAPA", "NON_CAPA", "N/A"]
    waterproof_rating:
      type: "string"
      enum: ["IP54", "IP55", "IP56", "IP67", "IP68", "UNKNOWN"]

  packaging:
    units_per_ctn: { type: "integer", minimum: 1, maximum: 100 }
    cft: { type: "number", minimum: 0.01, maximum: 50.0 }
    net_weight_kg: { type: "number", minimum: 0.1, maximum: 50.0 }
    gross_weight_kg: { type: "number", minimum: 0.1, maximum: 60.0 }

  references:
    # OEM normalizados
    oem_primary:
      {
        type: "string",
        description: "OEM principal sugerido (heurística configurable).",
      }
    oem_all:
      type: "array"
      description: "Lista de todos los OEM detectados (normalizados y deduplicados)."
      items: { type: "string" }
    # near-OEM normalizados + vínculo a OEM
    near_oem_all:
      type: "array"
      description: "Lista de near-OEM detectados (normalizados)."
      items: { type: "string" }
    near_oem_links:
      type: "array"
      description: "Relaciones near-OEM → OEM con nivel de confianza."
      items:
        type: "object"
        properties:
          near_oem: { type: "string" }
          maps_to_oem: { type: "string", nullable: true }
          confidence:
            {
              type: "string",
              enum: ["exact", "high", "medium", "low", "unmatched"],
            }
          notes: { type: "string", maxLength: 200 }
    # Otros
    notes: { type: "array", items: { type: "string", maxLength: 400 } }

# ==========================================================
# 3) FEATURES POR CATEGORÍA
# ==========================================================
by_category:
  "11:HEAD LAMP":
    features:
      light_source:
        { type: "string", enum: ["HALOGEN", "LED", "HID", "MIXED", "UNKNOWN"] }
      beam_type:
        {
          type: "string",
          enum: ["REFLECTOR", "PROJECTOR", "MATRIX", "UNKNOWN"],
        }
      with_leveling_motor: { type: "boolean" }
      with_afs: { type: "boolean" }
      with_ahb: { type: "boolean" }
      with_drl: { type: "boolean" }
      lens_i:
        { type: "string", enum_ref: "dims.numbering.I_lens_variation.map" }
      lens_j:
        {
          type: "string",
          enum_ref: "dims.numbering.J_additional_lens_color.map",
        }
      base_code: { type: "string", enum_ref: "dims.numbering.H_base_code.map" }
      classification:
        {
          type: "string",
          enum_ref: "dims.addendum_headlamps_only.G_classification.map",
        }
      certification:
        {
          type: "string",
          enum_ref: "dims.addendum_headlamps_only.H_product_certification.map",
        }
      submodel_flags:
        {
          type: "array",
          items:
            {
              enum_ref: "dims.addendum_headlamps_only.IJK_submodel_variation.map",
            },
        }
    required: [light_source, classification, certification]

  "19:TAIL LAMP":
    features:
      with_sequential_turn: { type: "boolean" }
      with_led_bar: { type: "boolean" }
      with_rear_fog: { type: "boolean" }
      lens_i:
        { type: "string", enum_ref: "dims.numbering.I_lens_variation.map" }
      lens_j:
        {
          type: "string",
          enum_ref: "dims.numbering.J_additional_lens_color.map",
        }
      base_code: { type: "string", enum_ref: "dims.numbering.H_base_code.map" }
      classification:
        { type: "string", enum_ref: "dims.numbering.F_classification.map" }
      certification:
        {
          type: "string",
          enum_ref: "dims.numbering.G_product_certification.map",
          allow_blank: true,
        }

  "20:FOG LAMP":
    features:
      position_front_rear: { type: "string", enum: ["FRONT", "REAR"] }
      light_source:
        { type: "string", enum: ["HALOGEN", "LED", "HID", "UNKNOWN"] }
      beam_pattern:
        { type: "string", enum: ["FOG_WIDE", "FOG_PROJECTOR", "UNKNOWN"] }
      lens_i:
        { type: "string", enum_ref: "dims.numbering.I_lens_variation.map" }
      lens_j:
        {
          type: "string",
          enum_ref: "dims.numbering.J_additional_lens_color.map",
        }
      base_code: { type: "string", enum_ref: "dims.numbering.H_base_code.map" }
      certification:
        {
          type: "string",
          enum_ref: "dims.numbering.G_product_certification.map",
          allow_blank: true,
        }

  "13:BACK-UP LAMP":
    features:
      lens_i:
        { type: "string", enum_ref: "dims.numbering.I_lens_variation.map" }
      lens_j:
        {
          type: "string",
          enum_ref: "dims.numbering.J_additional_lens_color.map",
        }
      base_code: { type: "string", enum_ref: "dims.numbering.H_base_code.map" }
      classification:
        { type: "string", enum_ref: "dims.numbering.F_classification.map" }

  "14:SIDE LAMP":
    features:
      lens_i:
        { type: "string", enum_ref: "dims.numbering.I_lens_variation.map" }
      lens_j:
        {
          type: "string",
          enum_ref: "dims.numbering.J_additional_lens_color.map",
        }
      base_code: { type: "string", enum_ref: "dims.numbering.H_base_code.map" }

  "15:CORNER LAMP":
    features:
      lens_i:
        { type: "string", enum_ref: "dims.numbering.I_lens_variation.map" }
      lens_j:
        {
          type: "string",
          enum_ref: "dims.numbering.J_additional_lens_color.map",
        }
      base_code: { type: "string", enum_ref: "dims.numbering.H_base_code.map" }

  "16:FRONT LAMP":
    features:
      with_drl: { type: "boolean" }
      lens_i:
        { type: "string", enum_ref: "dims.numbering.I_lens_variation.map" }
      lens_j:
        {
          type: "string",
          enum_ref: "dims.numbering.J_additional_lens_color.map",
        }
      base_code: { type: "string", enum_ref: "dims.numbering.H_base_code.map" }

  "21:LICENSE LAMP":
    features:
      light_source: { type: "string", enum: ["HALOGEN", "LED", "UNKNOWN"] }
      lens_i:
        { type: "string", enum_ref: "dims.numbering.I_lens_variation.map" }

  "29:REFLECTOR":
    features:
      reflectivity_grade: { type: "string", enum: ["STD", "HIGH", "UNKNOWN"] }
      lens_i:
        { type: "string", enum_ref: "dims.numbering.I_lens_variation.map" }

  "34:THIRD BRAKE LAMP":
    features:
      light_source: { type: "string", enum: ["LED", "HALOGEN", "UNKNOWN"] }
      lens_i:
        { type: "string", enum_ref: "dims.numbering.I_lens_variation.map" }

  "40:REAR FOG LAMP":
    features:
      light_source: { type: "string", enum: ["HALOGEN", "LED", "UNKNOWN"] }
      lens_i:
        { type: "string", enum_ref: "dims.numbering.I_lens_variation.map" }

# ==========================================================
# 4) PLANTILLAS DE DESCRIPCIÓN (incluyen años/OEM/near-OEM)
# ==========================================================
description_templates:
  variables_doc: |
    Variables disponibles:
    - ${product_group_name}, ${side_label}, ${classification_label}, ${cert_label}
    - ${base_label}, ${lens_i_label}, ${lens_j_label}
    - ${maker_display}, ${model_display}, ${year_span}
    - ${oem_primary}, ${oem_joined}, ${near_oem_joined}

  defaults:
    name: "${product_group_name} ${side_label}, ${classification_label}${cert_label?}, Base ${base_label}, Lens ${lens_i_label}${lens_j_label?}"
    detail: "${maker_display} ${model_display} ${year_span} · ${product_group_name} ${side_label} · ${classification_label} · ${cert_label?} · Base ${base_label} · Lens ${lens_i_label}${lens_j_label?} · OEM ${oem_primary?}${oem_joined? · also: ${oem_joined}}${near_oem_joined? · near: ${near_oem_joined}}"

  by_category:
    "11:HEAD LAMP":
      name: "Head Lamp ${side_label}, ${classification_label}${cert_label?}, ${beam_type?} ${light_source}"
      detail: "${maker_display} ${model_display} ${year_span} · Head Lamp ${side_label} · ${light_source}${beam_type?} · ${with_drl?DRL} ${with_afs?AFS} ${with_leveling_motor?Leveling} · Base ${base_label} · Lens ${lens_i_label}${lens_j_label?} · OEM ${oem_primary?}${oem_joined? · also: ${oem_joined}}${near_oem_joined? · near: ${near_oem_joined}}"
    "19:TAIL LAMP":
      name: "Tail Lamp ${side_label}, ${classification_label}${cert_label?}, Lens ${lens_i_label}${lens_j_label?}"
      detail: "${maker_display} ${model_display} ${year_span} · Tail Lamp ${side_label} · ${with_sequential_turn?Sequential} ${with_rear_fog?Rear Fog} · Base ${base_label} · Lens ${lens_i_label}${lens_j_label?} · OEM ${oem_primary?}${oem_joined? · also: ${oem_joined}}${near_oem_joined? · near: ${near_oem_joined}}"

# ==========================================================
# 5) VALIDACIÓN Y NORMALIZACIÓN (con OEM / near-OEM)
# ==========================================================
validation:
  rules:
    - id: "years-valid-range"
      field: "common.identity.model_years"
      custom: "years.from >= extraction.year_parsing.validation.min_year && (years.to == null || years.to <= extraction.year_parsing.validation.max_year)"
      message: "Rango de años fuera de los límites configurados."
    - id: "oem-format"
      field: "common.references.oem_all"
      pattern: "^[A-Z0-9\\-]{4,}$"
      message: "Formato OEM inválido tras normalización."
    - id: "near-oem-linkage"
      field: "common.references.near_oem_links"
      custom: "every(item => item.confidence in ['exact','high','medium','low','unmatched'])"
      message: "Confianza de near-OEM → OEM inválida."
    - id: "side-valid"
      field: "common.fitment.side"
      allowed_enum_ref: "dims.dimensions.sides"
      message: "Lado inválido."
    - id: "cert-known"
      field: "common.compliance.certification"
      allowed_enum_ref: "dims.numbering.G_product_certification.map"
      message: "Certificación no reconocida."

normalization:
  text:
    uppercase_fields:
      [
        "maker_canonical",
        "model_canonical",
        "classification",
        "certification",
        "side",
      ]
    trim_spaces: true
    collapse_whitespace: true
  assign_from_code:
    - from: "derived.E_position.side"
      to: "common.fitment.side"
    - from: "derived.F_classification.kind"
      to: "by_category.*.features.classification"
    - from: "derived.G_certification.primary"
      to: "common.compliance.certification"
    - from: "derived.H_base_code.base"
      to: "by_category.*.features.base_code"
    - from: "derived.I_lens.variant_i"
      to: "by_category.*.features.lens_i"
    - from: "derived.J_lens.variant_j"
      to: "by_category.*.features.lens_j"
  oem_near_oem:
    # Deduplicación y orden canónico
    dedupe: true
    sort: "alphanumeric"
    # Cómo se decide el oem_primary si no está explícito:
    primary_strategy: "first_non_empty" # first | longest | by_vendor_priority
    # Vinculación programática de near-OEM → OEM:
    link_near_to_oem: true
    link_confidence_thresholds:
      exact: 1.0
      high: 0.9
      medium: 0.7
      low: 0.5

# ==========================================================
# 6) VÍNCULOS Y REGLAS DE PRECEDENCIA (OEM/near-OEM)
# ==========================================================
linkage:
  precedence:
    - "prefer_oem_from_same_item_block"
    - "prefer_exact_match_between_near_oem_and_oem"
    - "fallback_to_prefix_match"
    - "fallback_to_token_overlap"
  notes:
    - "Si no hay OEM, pero existe near-OEM con 'exact' o 'high', promover near-OEM a 'oem_primary' marcado como 'derived'."
    - "Mantener trazabilidad en near_oem_links[].notes."

# ==========================================================
# 7) ASISTENTES DE CATEGORIZACIÓN
# ==========================================================
category_binding:
  "11": "11:HEAD LAMP"
  "13": "13:BACK-UP LAMP"
  "14": "14:SIDE LAMP"
  "15": "15:CORNER LAMP"
  "16": "16:FRONT LAMP"
  "19": "19:TAIL LAMP"
  "20": "20:FOG LAMP"
  "21": "21:LICENSE LAMP"
  "29": "29:REFLECTOR"
  "34": "34:THIRD BRAKE LAMP"
  "40": "40:REAR FOG LAMP"
